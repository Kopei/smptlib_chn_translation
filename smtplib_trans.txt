The smtplib module defines an SMTP client session object that can be used to send mail to any Internet machine with an SMTP or ESMTP listener daemon. For details of SMTP and ESMTP operation, consult RFC 821 (Simple mail Transfer Protocol) and RFC 1869 (SMTP Service Extensions).
stmp模块定义了一个smtp客户端会话对象，其可以给因特网上所有带有smtp或esmtp守护进程收听者的机器发送邮件。关于SMTP和ESMTP操作的细节，请移步RFC821和RFC1869
class smtplib.SMTP([host[, port[, local_hostname[, timeout ] ] ] ])

A SMTP instance encapsulates an SMTP connection. It has methods that support a full repertoire of SMTP and ESMTP operations. If the optional host and port parameters are given, the SMTP connect() method is called with those parameters during initialization. If specified, local_hostname is used as the FQDN of the local host in the HELO/EHLO command. Otherwise, the local hostname is found using socket.getfqdn(). If the connect() call returns anything other than a success code, an SMTPConnectError is raised. The optional timeout parameter specifies a timeout in seconds for blocking operations like the connection attempt (if not specified, the global default timeout setting will be used).If the timeout expires, socket.timeout is raised.  For normal use, you should only require the initialization/connect, sendmail(), and quit() methods.
An example is included below.
Changed in version 2.6: timeout was added.
一个SMTP实例封装了一个SMTP连接。它的函数支持所有SMTP和ESMTP的操作。如果可选的主机host和端口号port被提供，那么SMTP的connect()函数将会在初始化时调用这两个参数。如果local_hostname参数被指定，那么它将作为HELO/EHLO指令中本地主机的FQDN；否则，本地主机将用socket.getfqdn()函数找到。如果connect()返回不成功状态码，SMTPConnectError会产生。可选的timeout参数确定了像连接尝试等阻塞操作的过期时间（以秒为单位）。如果timeout参数没有给予，那么全局过期时间设置将被使用。如果时间过期，socket.timeout将被引用。对于一般使用，你可以仅仅需要使用初始化/连接，sendmail(),和quit()函数。下面会有例子。
2.6版本timeout参数才被添加。

class smtplib.SMTP_SSL([host[, port[, local_hostname[, keyfile[, certfile[, timeout ] ] ] ] ] ])

A SMTP_SSL instance behaves exactly the same as instances of SMTP. SMTP_SSL should be used for
situations where SSL is required from the beginning of the connection and using starttls() is not appropriate. If host is not specified, the local host is used. If port is omitted, the standard SMTP-overSSL port (465) is used. local_hostname has the same meaning as it does for the SMTP class. keyfile and certfile are also optional, and can contain a PEM formatted private key and certificate chain file for the SSL connection. The optional timeout parameter specifies a timeout in seconds for blocking operations like theconnection attempt (if not specified, the global default timeout setting will be used). If the timeout expires,socket.timeout is raised.  New in version 2.6.
一个SMTP_SSL实例的行为和SMTP实例相同。SMTP_SSL应该被运用在需要SSL连接的地方，同时使用starttls()不合适的地方。如果主机没有指明，那么本地主机将被使用。如果没有端口指定，默认标准SMTP-overSSL端口465将被使用。local_hostname参数和SMTP类同名参数意义相同。keyfile和certfile同样是可选的，可以包涵一个PEM私有钥和认证链文件用于ssl连接。timeout参数的使用如同smtp的timeout。
2.6版本的新属性。

class smtplib.LMTP([host[, port[, local_hostname ] ] ])

The LMTP protocol, which is very similar to ESMTP, is heavily based on the standard SMTP client. It’s
common to use Unix sockets for LMTP, so our connect() method must support that as well as a regular
host:port server. local_hostname has the same meaning as it does for the SMTP class. To specify a Unix
socket, you must use an absolute path for host, starting with a ‘/’.
Authentication is supported, using the regular SMTP mechanism. When using a Unix socket, LMTP generally don’t support or require any authentication, but your mileage might vary.
New in version 2.6.
LMTP协议十分类似ESMTP，并极为依赖标准的SMTP客户端。Unix sockets常常使用LMTP，所以我们的connect()函数必须支持unix
LMTP和普通的主机：端口形式。local_hostname用法和SMTP一样。对于Unix socket,host参数必须使用绝对路径。可以使用普通的SMTP机制安全认证。当使用Unix socket时，LMTP通常不支持或需要认证，不过还是需要按情况而定。
2.6版本新特性

部分意外事件实例定义：
exception smtplib.SMTPException
The base exception class for all the other exceptions provided by this module.
这个模块提供所有其他意外的基础类
exception smtplib.SMTPServerDisconnected
This exception is raised when the server unexpectedly disconnects, or when an attempt is made to use the SMTP instance before connecting it to a server.
当服务器意外失去连接，这个意外将被调用；或者用SMTP实例尝试去连接服务器时，但是连接失败将跳出意外。
exception smtplib.SMTPResponseException
Base class for all exceptions that include an SMTP error code. These exceptions are generated in some instances when the SMTP server returns an error code. The error code is stored in the smtp_code attribute of the error, and the smtp_error attribute is set to the error message.
这是所有包涵SMTP错误码意外的基类。这些带有错误码的意外是由SMTP主机返回的。错误码被存在smtp_code属性中，并且smtp_error属性被设置到error信息中。
exception smtplib.SMTPSenderRefused
Sender address refused. In addition to the attributes set by on all SMTPResponseException exceptions, this sets ‘sender’ to the string that the SMTP server refused.
发送者地址被拒绝。除了所有SMTPResponseException意外设置的属性，这个实例设置了SMTP服务器拒绝的sender的字符串。
exception smtplib.SMTPRecipientsRefused
All recipient addresses refused. The errors for each recipient are accessible through the attribute recipients, which is a dictionary of exactly the same sort as SMTP.sendmail() returns.
所有接受者地址拒绝。每个接受者属性可以得到每个接受者错误的信息，接受者属性是字典形式，就是SMTP.sendmail()的返回一致。
exception smtplib.SMTPDataError
The SMTP server refused to accept the message data.
SMTP服务器拒绝信息体内容。
exception smtplib.SMTPConnectError
Error occurred during establishment of a connection with the server.
建立连接主机发生错误。
exception smtplib.SMTPHeloError
The server refused our HELO message.
主机拒绝HOLE信息
exception smtplib.SMTPAuthenticationError
SMTP authentication went wrong. Most probably the server didn’t accept the username/password combination provided.
SMTP认证错误，大部分情况是主机不接受用户名/密码组合。
See also:
RFC 821 - Simple Mail Transfer Protocol Protocol definition for SMTP. This document covers the model, operating procedure, and protocol details for SMTP.
RFC 1869 - SMTP Service Extensions Definition of the ESMTP extensions for SMTP. This describes a framework for extending SMTP with new commands, supporting dynamic discovery of the commands provided by the server, and defines a few additional commands.
另参考：
RFC-821
RFC-1869

An SMTP instance has the following methods:
一个SMTP实例有如下函数：
SMTP.set_debuglevel(level)
Set the debug output level. A true value for level results in debug messages for connection and for all messages sent to and received from the server.
设置调试输出等级。设置为真将看到所有连接的信息和服务器收发的信息。

SMTP.docmd(cmd[, argstring ])
Send a command cmd to the server. The optional argument argstring is simply concatenated to the command, separated by a space.  This returns a 2-tuple composed of a numeric response code and the actual response line (multiline responses are joined into one long line.) In normal operation it should not be necessary to call this method explicitly. It is used to implement other methods and may be useful for testing private extensions.  If the connection to the server is lost while waiting for the reply, SMTPServerDisconnected will be raised.
发送一个cmd指令给服务器。可选的argstring将被连接到cmd，中间用空格分开。函数返回一个包涵响应的状态码和实际响应行的元组（多行响应将被组合成一行）。正常情况下可以不必调用这个函数。它可以被其他函数调用实施，或者可以被用于测试私有扩展。如果在等待服务器响应时连接中断，SMTPServerDisconnected将被引起。

SMTP.connect([host[, port ] ])
Connect to a host on a given port. The defaults are to connect to the local host at the standard SMTP port (25). If the hostname ends with a colon (’:’) followed by a number, that suffix will be stripped off and the number interpreted as the port number to use. This method is automatically invoked by the constructor if a host is specified during instantiation. Returns a 2-tuple of the response code and message sent by the server in its connection response.
连接到给定的主机端口。默认连接到本地主机，默认端口25.  host:port的格式将被翻译成主机和端口号的形式。这个函数将被自动唤起一个构造器，如果host参数被指定。服务器返回的是（响应码，信息体）元组。

SMTP.helo([hostname ])
Identify yourself to the SMTP server using HELO. The hostname argument defaults to the fully qualified domain name of the local host. The message returned by the server is stored as the helo_resp attribute of the object.  In normal operation it should not be necessary to call this method explicitly. It will be implicitly called by the sendmail() when necessary.
用HELO通过SMTP服务器鉴定自己。hostname参数默认是全部有资格的本地域名。服务器返回的信息体存储在对象的helo_resp属性中。正常情况下不必调用这个函数，当调用sendmail()函数时，此函数将被自动隐含调用。

SMTP.ehlo([hostname ])
Identify yourself to an ESMTP server using EHLO. The hostname argument defaults to the fully qualified domain name of the local host. Examine the response for ESMTP option and store them for use by has_extn(). Also sets several informational attributes: the message returned by the server is stored as the ehlo_resp attribute, does_esmtp is set to true or false depending on whether the server supports ESMTP, and esmtp_features will be a dictionary containing the names of the SMTP service extensions this server supports, and their parameters (if any).  Unless you wish to use has_extn() before sending mail, it should not be necessary to call this method explicitly. It will be implicitly called by sendmail() when necessary.
用EHLO通过ESMTP服务器鉴定自己。hostname参数默认是全部符合的本地域名。检测ESMTP的响应，并把它们存储和被has_extn()函数调用。几个信息属性的设置：ESMTP消息体返回存在ehlo_resp属性中，does_esmtp用来检测服务器是否支持ESMTP。esmtp_features是一个字典，包含服务器支持的smtp服务拓展功能和它的参数。除非你想要在发送email前使用has_extn(),不必显式地调用这个函数，sendmail()将会隐含地调用它，在必要的时候。

SMTP.ehlo_or_helo_if_needed()
This method call ehlo() and or helo() if there has been no previous EHLO or HELO command this session. It tries ESMTP EHLO first.
SMTPHeloError The server didn’t reply properly to the HELO greeting.  New in version 2.6.
这个函数调用ehlo()或helo(),如果之前会话没有调用过EHLO或HELO。先会调用ESMTP的EHLO。
SMTPHeloError 当服务器没有正常应答HELO，引起此意外错误。 2.6版本新特性。

SMTP.has_extn(name)
Return True if name is in the set of SMTP service extensions returned by the server, False otherwise.  Case is ignored.
返回真，如果服务器支持某种SMTP扩展服务，忽略大小写。

SMTP.verify(address)
Check the validity of an address on this server using SMTP VRFY. Returns a tuple consisting of code 250 and a full RFC 822 address (including human name) if the user address is valid. Otherwise returns an SMTP error code of 400 or greater and an error string.
确定服务器地址的有效性。如果有效，返回一个元组，由状态码250和RFC822地址组成（包含人可以读的名)。无效者返回400以上的状态码和一个错误字符串。

Note: Many sites disable SMTP VRFY in order to foil spammers.
注意：很多站点为了防止垃圾邮件阻止了SMTP VRFY功能。

SMTP.login(user, password)
Log in on an SMTP server that requires authentication. The arguments are the username and the password to authenticate with. If there has been no previous EHLO or HELO command this session, this method triesESMTP EHLO first. This method will return normally if the authentication was successful, or may raise the following exceptions:
登入一个需要认证的smtp服务器。参数是用户名和密码。如果之前没有用过EHLO和HELO命令会话，这个函数会先调用EHLO。如果认证正确，函数返回正常，否则可能有如下意外：
SMTPHeloError The server didn’t reply properly to the HELO greeting.  
SMTPHeloError服务器没有正确应答HELO。 
SMTPAuthenticationError The server didn’t accept the username/password combination.  
SMTPAuthenticationError服务器不接受用户名/密码组合。 
SMTPException No suitable authentication method was found.
SMTPException没有找到合适的认证方式。 

SMTP.starttls([keyfile[, certfile ] ])
Put the SMTP connection in TLS (Transport Layer Security) mode. All SMTP commands that follow will be encrypted. You should then call ehlo() again.  If keyfile and certfile are provided, these are passed to the socket module’s ssl() function.  If there has been no previous EHLO or HELO command this session, this method tries ESMTP EHLO first.  Changed in version 2.6.
把SMTP连接设到TLS（安全传输层）模式。所有SMTP命令将被加密。你需要再次调用ehlo()。如果keyfile和certfile被提供，它们将被传递到socket模块的ssl()函数。如果之前没有调用过EHLO或HELO命令，这个函数会先调用ESMTP的EHLO。2.6版本有所改动。
SMTPHeloError The server didn’t reply properly to the HELO greeting.
SMTPHeloError 服务器没有正确应答HELO。
SMTPException The server does not support the STARTTLS extension.
SMTPException服务器不支持STARTTLS扩展。 
Changed in version 2.6.
RuntimeError SSL/TLS support is not available to your Python interpreter.
RuntimeError python解释器不支持SSL/TLS

SMTP.sendmail(from_addr, to_addrs, msg[, mail_options, rcpt_options ])
Send mail. The required arguments are an RFC 822 from-address string, a list of RFC 822 to-address strings (a bare string will be treated as a list with 1 address), and a message string. The caller may pass a list of ESMTP options (such as 8bitmime) to be used in MAIL FROM commands as mail_options.  ESMTP options (such as DSN commands) that should be used with all RCPT commands can be passed as rcpt_options. (If you need to use different ESMTP options to different recipients you have to use the low-level methods such as mail(), rcpt() and data() to send the message.)
发送email.需要的参数有RFC822的发送地址，RFC822规范的接收地址列表（单单一个字符串将被认为是单一地址的列表），和信息体字符串。调用者可以传送一个ESMTP可选参数列表mail_options（比如8bitmime)作为MAIL FROM指令。ESMTP可选项（比如DSN指令）应该和所有RCPT指令一起用，并传送给rcpt_options参数。（如果你需要对不同接受者使用不同的ESMTP选项，你需要使用低层次的函数mail(),rcpt()和data()去发送数据。）
Note: The from_addr and to_addrs parameters are used to construct the message envelope used by the transport agents. The SMTP does not modify the message headers in any way.
注意：from_addr和to_addrs参数是传输代理用于构建邮件的信封，SMTP不会修改邮件内容头。
If there has been no previous EHLO or HELO command this session, this method tries ESMTP EHLO first. If the server does ESMTP, message size and each of the specified options will be passed to it (if the option is in the feature set the server advertises). If EHLO fails, HELO will be tried and ESMTP options suppressed.  This method will return normally if the mail is accepted for at least one recipient. Otherwise it will raise an exception. That is, if this method does not raise an exception, then someone should get your mail. If this method does not raise an exception, it returns a dictionary, with one entry for each recipient that was refused. Each entry contains a tuple of the SMTP error code and the accompanying error message sent by the server.
如果之前会话没有调用过EHLO或HELO，此函数会先调用ESMTP的EHLO。如果服务器支持ESMTP，信息体内容和各种详细参数将被传输给它。（如果服务器特征集支持此项功能）。如果EHLO失败，那么将尝试HELO，ESMTP项将被放弃。如果至少一个接受者收到信息那么此函数将会返回正常。否则会引起意外错误。正常情况下会返回一个字典，包含每个拒绝的接受者。字典的值是一个元组，包含了SMTP错误和服务器返回的错误信息。
This method may raise the following exceptions:
这个函数会返回如下意外错误：
SMTPRecipientsRefused All recipients were refused. Nobody got the mail. The recipients attribute of the exception object is a dictionary with information about the refused recipients (like the one returned when at least one recipient was accepted).
SMTPRecipientsRefused
所有接受者都拒绝。没有人收到邮件。此意外错误对象的接受者属性是一个字典（如同正常返回但是有接受者没有收到邮件的那个字典）
SMTPHeloError The server didn’t reply properly to the HELO greeting.
SMTPHeloError 服务器没有收到合适的HELO。
SMTPSenderRefused The server didn’t accept the from_addr.
SMTPSenderRefused 服务器不接受from_addr
SMTPDataError The server replied with an unexpected error code (other than a refusal of a recipient).  Unless otherwise noted, the connection will be open even after an exception is raised.
SMTPDataError
服务器返回一个意外的错误码（而不是接受者的拒绝）。除非其他地方指明，连接将会一直建立直到意外发生。

SMTP.quit()
Terminate the SMTP session and close the connection. Return the result of the SMTP QUIT command.  Changed in version 2.6: Return a value.Low-level methods corresponding to the standard SMTP/ESMTP commands HELP, RSET, NOOP, MAIL, RCPT, and DATA are also supported. Normally these do not need to be called directly, so they are not documented here.  For details, consult the module code.
终结SMTP连接。返回SMTP QUIT指令的结果。2.6版本有所改动：返回一个值。低层次函数支持对应标准的SMTP/ESMTP指令HELP,REST,NOOP,MAIL,RCPT和DATA。正常情况下他们不需要被直接调用。所以这些函数没有在此列出。对于细节，请看模块代码。
